language: python

matrix:
  include:
    # - os: 'linux'
    #   name: linux
    #   python: 3.6
    #   before_install:
    #     - sudo apt-get -qq update
    #     - sudo apt-get install -y libboost-test-dev
    #     - sudo apt-get install -y swig
    #   script:
    #     - cd $BUILD_HOME
    #     - cmake ../ -DBUILD_TESTS=ON -DBUILD_COVERAGE=ON ..
    #     - cmake --build .
    #     - cd tests
    #     - ctest
    #     - cd $SWMM_HOME
    #     - pip install --src build/packages -r tools/requirements.txt
    #     - tools/before-test.sh $TEST_HOME $SWMM_HOME/$BUILD_HOME/bin $TRAVIS_COMMIT
    #     - tools/run-nrtest.sh -c -t $TEST_HOME -v $TRAVIS_COMMIT

    # - os: osx
    #   name: 'osx'
    #   python: 3.6
    #   osx_image: xcode10
    #   language: generic
    #   before_install:
    #     - brew update
    #     - brew install libomp
    #   script:
    #     - cd $BUILD_HOME
    #     - cmake ../ -DBUILD_TESTS=ON ..
    #     - cmake --build .
    #     - cd tests
    #     - ctest
    #     - cd $SWMM_HOME

    - os: osx
      name: 'osx wheel'
      osx_image: xcode10
      language: generic
      python: "3.6"
      install:
        - brew update
        - brew install libomp
        - pip install --upgrade pip
        - pip install scikit-build
      script:
        - pip wheel . --no-deps -w dist

    - name: 'manylinux2014'
      python: "3.6"
      sudo: required
      env: DOCKER_IMAGE=quay.io/pypa/manylinux2014_x86_64
           PLAT=manylinux2014_x86_64
      services:
        - docker
      before_install:
        - docker pull $DOCKER_IMAGE
      script:
        - docker run --rm -e PLAT=$PLAT -v `pwd`:/io $DOCKER_IMAGE $PRE_CMD /io/tools/build-wheels.sh
        - ls wheelhouse/

#compiler:
#  - gcc
#  - clang
# On OS X, gcc is an alias for clang s. https://docs.travis-ci.com/user/languages/c/#gcc-on-os-x

env:
  global:
    - SWMM_HOME=`pwd`
    - BUILD_HOME=build
    - RELEASE_HOME=release
    - TEST_HOME=nrtestsuite
    - SWMM_VERSION=""
    - GIT_RELEASE_DIR=GIT_RELEASE

#install:

before_script:
  - mkdir -p $BUILD_HOME
  - mkdir -p $RELEASE_HOME
  
deploy:
  provider: releases
  api_key: $OWA_SWMM_CI_TOKEN
  file: 
    - "$SWMM_HOME/OWA-SWMM-$TRAVIS_OS_NAME-$SWMM_VERSION.zip"
  skip_cleanup: true
  overwrite: true 
  draft: true 
  on:
    branch: develop
    tag: true 
  
after_success:
  - if ! [[ "$TRAVIS_JOB_NAME" == "manylinux2014" ]]; then
      cd $TRAVIS_BUILD_DIR/tools ;
      bash after-success.sh ;
    fi
